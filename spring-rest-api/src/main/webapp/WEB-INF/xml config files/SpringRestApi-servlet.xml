<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- Required to enable Spring post processing on @Configuration classes. -->
	<context:annotation-config />
 	<context:component-scan base-package="com.raj.beans"/>
 	<context:component-scan base-package="com.raj.controller"/>
 	<context:component-scan base-package="com.raj.service"/>
 	<context:component-scan base-package="com.raj.serviceImpl"/>
 	<context:component-scan base-package="com.raj.dao"/>
 	<context:component-scan base-package="com.raj.daoImpl"/>
 	
 	<context:property-placeholder location="classpath:hibernate.properties" />
	
    <!-- Swagger Configuration Start -->
    
    <!-- Required so springfox can access spring's RequestMappingHandlerMapping  -->
   	<mvc:annotation-driven/>
	<bean class="com.raj.swagger.config.Swagger2Config"/>
	<bean class="com.raj.swagger.config.WebAppConfig"/>
   
	<!-- Swagger Configuration End -->
	
	
	<!-- Database Configuration Start -->
		
	<!-- Single Database Configuration Start-->
	
	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"> -->	
	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	
	
	<property name="driverClassName" value="${jdbc.connection.driver_class}"></property>
	<property name="url" value="${jdbc.connection.url}"></property>
	<property name="username" value="${jdbc.connection.username}"></property>
	<property name="password" value="${jdbc.connection.password}"></property>
	
	<property name="initialPoolSize" value="${hibernate.c3p0.initialPoolSize}"></property>
	<property name="minPoolSize" value="${hibernate.c3p0.min_size}"></property>
	<property name="maxPoolSize" value="${hibernate.c3p0.max_size}"></property>
	<property name="acquireIncrement" value="${hibernate.c3p0.acquire_increment}"></property>
	<property name="idleConnectionTestPeriod" value="${hibernate.c3p0.idle_test_period}"></property>
	<property name="loginTimeout" value="${hibernate.c3p0.timeout}"></property>
	<property name="connectionCustomizerClassName" value="com.antelope.data.c3p0.IsolationLevelConnectionCustomizer"></property>

	<property name="maxIdleTimeExcessConnections" value="${hibernate.c3p0.maxIdleTimeExcessConnections}"></property>
	
	</bean>
	 
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="annotatedClasses">
	  		<list>
	   			<value>com.raj.beans.CityBean</value>
	   			<value>com.raj.beans.CountryBean</value>
	   			<value>com.raj.beans.EmployeeBean</value>
	   			<value>com.raj.beans.DepartmentBean</value>
	   			<value>com.raj.beans.DeptContactDetail</value>
	  		</list>
 		</property> 
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2dll.auto}</prop>
                
                <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.c3p0.max_size">${hibernate.c3p0.max_size}</prop> 
				<prop key="hibernate.order_updates">${hibernate.order_updates}</prop>
				<prop key="hibernate.jdbc.batch_versioned_data">${hibernate.jdbc.batch_versioned_data}</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				<prop key="hibernate.connection.autocommit">${hibernate.connection.autocommit}</prop>
                
            </props>
        </property>
    </bean> -->
    
   <!--  
    <tx:annotation-driven />
    <tx:annotation-driven transaction-manager="transactionManager"/>
  
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
  -->
  	<!-- Single Database Configuration End-->
	
	<!-- Multiple Database Configuration Start-->
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.connection.driver_class}"></property>
		<property name="url" value="${jdbc.connection.url.test}"></property>
		<property name="username" value="${jdbc.connection.username}"></property>
		<property name="password" value="${jdbc.connection.password}"></property>
	</bean>
	
	<bean id="dataSourceWorld" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.connection.driver_class}"></property>
		<property name="url" value="${jdbc.connection.url.world}"></property>
		<property name="username" value="${jdbc.connection.username}"></property>
		<property name="password" value="${jdbc.connection.password}"></property>
	</bean>
	
	<!-- Hibernate 5 SessionFactory Bean definition -->
	 
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="annotatedClasses">
	  		<list>
	   			<value>com.raj.beans.CityBean</value>
	   			<value>com.raj.beans.CountryBean</value>
	   			<value>com.raj.beans.EmployeeBean</value>
	   			<value>com.raj.beans.DepartmentBean</value>
	   			<value>com.raj.beans.DeptContactDetail</value>
	  		</list>
 		</property> 
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2dll.auto}</prop>
            </props>
        </property>
    </bean>
    
    <bean id="sessionFactoryWorld"
        class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSourceWorld" />
        <property name="annotatedClasses">
	  		<list>
	   			<value>com.raj.beans.CountryBean</value>
	  		</list>
 		</property> 
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2dll.auto}</prop>
            </props>
        </property>
    </bean>
    
    <tx:annotation-driven transaction-manager="transactionManager"/>
	<tx:annotation-driven transaction-manager="txnManagerWorld"/>
	
	<bean id="transactionManager"
      class="org.springframework.orm.hibernate5.HibernateTransactionManager">
    	<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="txnManagerWorld"
	      class="org.springframework.orm.hibernate5.HibernateTransactionManager">
	    <property name="sessionFactory" ref="sessionFactoryWorld" />
	</bean>
	
	<bean id="persistenceExceptionTranslationPostProcessor"
      class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	
	<!-- Multiple Database Configuration End-->
	
	<!-- Database Configuration End -->
 </beans>